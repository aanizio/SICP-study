1.1)
10
12
8
3
(+ 8 (-2)) = 6
a = 3
b = (+ a 1) = 4
(+ a b 12) = 29
false
(> b a) & (< b 12) == true  --> b = 4

(= b 4) --> 16

4

(* 4 (+ a 1)) = 16

1.2)
(/ (+ 5 4 (- 2 (- 3 (+ 6 (/ 4 5)))))
   (* 3 (- 6 2) (- 2 7))
   )

1.3)
(define (square x) (* x x))
(define (sum_squares x y) 
	(+ (square x) (square y))
	)

(define (max x y) (if (> x y) x y))
(define (min x y) (if (> x y) y x))

(define (sum_squares_largest x y z)
	(sum_squares
		(max x y)
		(max (min x y) z)
	)
	)

1.4)
(> b 0) --> (+ a b)
(< b 0) --> (- a b)


## SQUARE ROOT
(define (_sqrt x y)
	(cond 	((= (square y) x) y) 
		((> (square y) x) -1)
		(else (_sqrt x (+ y 1))))
	)

(define (sqrt x)
	(if (< x 0) -1 (_sqrt x 0))
	)
